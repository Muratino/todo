{"version":3,"sources":["redux/Slice/todo.js","redux/store.js","components/BodyTask.js","components/HeaderName.js","components/CompletedTask.js","components/TodoDataGrid.js","components/Todo.js","app/App.js","index.js"],"names":["todoSlice","createSlice","name","initialState","todos","isLoading","isError","createTask","id","date","status","task","assign","links","result","complatedTasks","reducers","setTodo","state","action","payload","setCompletedTodo","setTodoLoading","setTodoError","setComplatedTask","completTask","filter","el","Number","newArr","localStorage","setItem","JSON","stringify","setReturnTask","setCreateDate","setCreateAssing","setCreateStatus","setCreateNewTask","unshift","push","setCreateLinks","setCreateResult","setCreateTaskName","actions","store","configureStore","reducer","todo","BodyTask","dispatch","useDispatch","React","useState","selectValue","setSelectValue","className","type","checked","onChange","prev","htmlFor","style","background","color","padding","boxSizing","HeaderName","field","headerName","editable","value","isInput","valueInputDate","setValueInputDate","event","target","fontWeight","map","index","newStr","replace","Typography","CompletedTask","e","border","TodoDataGrid","columns","useSelector","createTaskValue","setCreateTaskValue","CircularProgress","determinate","size","variant","Alert","severity","AlertTitle","CardContent","placeholder","setTimeout","onClick","newTask","Math","floor","random","Date","toLocaleDateString","cheked","localArr","getItem","arr","parse","Todo","useEffect","tasks","completedTasks","theme","createTheme","ThemeProvider","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Card","width","error","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.437606d6.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  isLoading: false,\r\n  isError: false,\r\n  createTask: {\r\n    id: null,\r\n    date: '',\r\n    status: '',\r\n    task: '',\r\n    assign: '',\r\n    links: '',\r\n    result: ''\r\n  },\r\n  complatedTasks: []\r\n}\r\n\r\nexport const todoSlice = createSlice({\r\n  name: 'todo',\r\n  initialState,\r\n  reducers: {\r\n    setTodo(state, action) {\r\n      state.todos = [...action.payload]\r\n    },\r\n    setCompletedTodo(state, action) {\r\n      state.complatedTasks= [...action.payload]\r\n    },\r\n    setTodoLoading(state) {\r\n      state.isLoading = true\r\n    },\r\n    setTodoError(state, action) {\r\n      state.isError = action.payload\r\n    },\r\n    setComplatedTask(state, action) {\r\n      const completTask = state.todos.filter(el => Number(el.id) === Number(action.payload))\r\n      const newArr = state.todos.filter(el => Number(el.id) !== Number(action.payload))\r\n      state.todos = newArr\r\n      state.complatedTasks = [...state.complatedTasks, ...completTask]\r\n      localStorage.setItem('todos', JSON.stringify(newArr))\r\n      localStorage.setItem('completed', JSON.stringify(state.complatedTasks))\r\n    },\r\n    setReturnTask(state, action) {\r\n      const task = state.complatedTasks.filter(el => Number(el.id) === Number(action.payload))\r\n      const newArr = state.complatedTasks = state.complatedTasks.filter(el => Number(el.id) !== Number(action.payload))\r\n      state.todos = [...state.todos, ...task]\r\n      localStorage.setItem('completed', JSON.stringify(newArr))\r\n      localStorage.setItem('todos', JSON.stringify(state.todos))\r\n    },\r\n    setCreateDate(state, action) {\r\n      state.createTask = { ...state.createTask, date: action.payload }\r\n    },\r\n    setCreateAssing(state, action) {\r\n      state.createTask = { ...state.createTask, assign: action.payload }\r\n    },\r\n    setCreateStatus(state, action) {\r\n      state.createTask = { ...state.createTask, status: action.payload }\r\n    },\r\n    setCreateNewTask(state, action) {\r\n      action.payload.status === 'Critical' ? state.todos.unshift(action.payload) : state.todos.push(action.payload)\r\n\r\n    },\r\n    setCreateLinks(state, action) {\r\n      state.createTask = { ...state.createTask, links: action.payload }\r\n    },\r\n    setCreateResult(state, action) {\r\n      state.createTask = { ...state.createTask, result: action.payload }\r\n    },\r\n    setCreateTaskName(state, action) {\r\n      state.createTask = { ...state.createTask, task: action.payload }\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  setTodo,\r\n  setCompletedTodo,\r\n  setTodoError,\r\n  setTodoLoading,\r\n  setCreateDate,\r\n  setCreateAssing,\r\n  setCreateStatus,\r\n  setCreateNewTask,\r\n  setCreateTaskName,\r\n  setCreateResult,\r\n  setCreateLinks,\r\n  setReturnTask,\r\n  setComplatedTask\r\n} = todoSlice.actions\r\n\r\nexport default todoSlice.reducer","import { configureStore } from '@reduxjs/toolkit'\r\nimport todo from './Slice/todo';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    todo\r\n  },\r\n})","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setComplatedTask } from '../redux/Slice/todo';\r\n\r\nconst BodyTask = ({ id, date, task, status, links, result, assign }) => {\r\n  const dispatch = useDispatch();\r\n  const [selectValue, setSelectValue] = React.useState(false);\r\n\r\n  const handleChangeLabel = () => {\r\n    setSelectValue(prev => !prev)\r\n    dispatch(setComplatedTask(id))\r\n  };\r\n\r\n  return (\r\n    <div className='task'>\r\n      <div\r\n        className=\"task__input d-flex bordered\">\r\n        <input type=\"checkbox\" id={id} checked={selectValue} onChange={handleChangeLabel} />\r\n        <label htmlFor={id}>{date}</label>\r\n      </div>\r\n      <div className=\"task__status d-flex bordered\">\r\n        <div style={status === 'Normal' ? { background: '#b7db95' } : { background: '#F73F3F', color: '#fff' }} className=\"task__status-oval bordered\">\r\n          <span>{status}</span>\r\n        </div>\r\n      </div>\r\n      <div style={{ padding: '8px', boxSizing: 'border-box' }} className=\"task__name bordered\">\r\n        <span>{task}</span>\r\n      </div>\r\n      <div className=\"task__name d-flex bordered\">\r\n        <span>Assign: {assign}</span>\r\n      </div>\r\n      <div className=\"task__name d-flex bordered\">\r\n        <span>{links}</span>\r\n      </div>\r\n      <div className=\"task__name d-flex bordered\">\r\n        <span>{result}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BodyTask;\r\n","import React from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  setCreateDate,\r\n  setCreateAssing,\r\n  setCreateStatus\r\n} from '../redux/Slice/todo';\r\n\r\nconst HeaderName = ({ field, headerName, editable, value, isInput }) => {\r\n  const dispatch = useDispatch();\r\n  // const [valueInputTask, setValueInputTask] = React.useState('');\r\n  // const [valueInputLinks, setValueInputLinks] = React.useState('');\r\n  // const [valueInputResult, setValueInputResult] = React.useState('');\r\n  const [selectValue, setSelectValue] = React.useState('');\r\n  const [valueInputDate, setValueInputDate] = React.useState('');\r\n\r\n  const handleChangeDate = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    const newStr = value.replace(/[-]/g, '.')\r\n    setValueInputDate(value);\r\n    dispatch(setCreateDate(newStr))\r\n  };\r\n\r\n  const handleChangeStatus = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSelectValue(value);\r\n    field === 'status' ? dispatch(setCreateStatus(value)) : dispatch(setCreateAssing(value))\r\n\r\n  };\r\n\r\n  if (editable) {\r\n    return (\r\n      <select name={field} id={field} value={selectValue} onChange={handleChangeStatus} style={field === 'status' ? { fontWeight: '400' } : {}}>\r\n        {\r\n          field === 'status' ? <option value=\"\">Priority</option> : <option value=\"\">Assigns</option>\r\n        }\r\n        {value.map((el, index) => <option key={index} value={el} >{el}</option>)}\r\n      </select>\r\n    )\r\n  }\r\n  // if (isInput && field === 'task') {\r\n  //   return (\r\n  //     <input type=\"text\" value={valueInputTask} onChange={e => setValueInputTask(e.target.value)} />\r\n  //   )\r\n  // }\r\n\r\n  // if (isInput && field === 'links') {\r\n  //   return (\r\n  //     <input type=\"text\" value={valueInputLinks} onChange={e => setValueInputLinks(e.target.value)} />\r\n  //   )\r\n  // }\r\n  // if (isInput && field === 'result') {\r\n  //   return (\r\n  //     <input type=\"text\" value={valueInputResult} onChange={e => setValueInputResult(e.target.value)} />\r\n  //   )\r\n  // }\r\n  if (isInput && field === 'date') {\r\n    return (\r\n      <input value={valueInputDate} onChange={handleChangeDate} type=\"date\" name='date' />\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <Typography>{headerName}</Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderName;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setReturnTask } from '../redux/Slice/todo';\r\n\r\nconst CompletedTask = ({ id, date, task, status, links, result, assign }) => {\r\n  const dispatch = useDispatch();\r\n  const [selectValue, setSelectValue] = React.useState(true);\r\n\r\n  const handleChangeLabel = (e) => {\r\n    setSelectValue(e.target.checked)\r\n    dispatch(setReturnTask(id))\r\n  };\r\n\r\n  return (\r\n    <div className='task'>\r\n      <div\r\n        className=\"task__input d-flex bordered\">\r\n        <input type=\"checkbox\" id={id} checked={selectValue} onChange={handleChangeLabel} />\r\n        <label htmlFor={id}>{date}</label>\r\n      </div>\r\n      <div className=\"task__status d-flex bordered\" >\r\n        <div style={status === 'Normal' ? { background: '#b7db95' } : { background: '#F73F3F', color: '#fff' }} className=\"task__status-oval\">\r\n          <span>{status}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"task__name bordered\" style={{ padding: '8px', boxSizing: 'border-box' }}>\r\n        <span>{task}</span>\r\n      </div>\r\n      <div className=\"task__name d-flex bordered\" >\r\n        <span>Assign: {assign}</span>\r\n      </div>\r\n      <div className=\"task__name d-flex bordered\" style={{ border: '1px solid rgb(209, 209, 209)' }}>\r\n        <span>{links}</span>\r\n      </div>\r\n      <div className=\"task__name d-flex bordered \" >\r\n        <span>{result}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompletedTask;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AlertTitle, Alert, CircularProgress, CardContent } from '@mui/material';\r\nimport BodyTask from './BodyTask';\r\nimport HeaderName from './HeaderName';\r\nimport CompletedTask from './CompletedTask';\r\nimport {\r\n  setCreateNewTask,\r\n  setCreateTaskName,\r\n} from '../redux/Slice/todo';\r\n\r\nconst TodoDataGrid = ({ columns }) => {\r\n  const dispatch = useDispatch();\r\n  const { createTask, isLoading, isError, todos, complatedTasks } = useSelector(state => state.todo)\r\n  const [createTaskValue, setCreateTaskValue] = React.useState('');\r\n\r\n  const handleChangeTaskName = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setCreateTaskValue(value);\r\n    setTimeout(() => {\r\n      dispatch(setCreateTaskName(value))\r\n    }, 400);\r\n  };\r\n\r\n  const createNewTask = () => {\r\n    let newTask = {\r\n      id: createTask.id ? createTask.id : Math.floor(Math.random() * (1000 - 10)) + 10,\r\n      date: createTask.date ? createTask.date : new Date().toLocaleDateString(),\r\n      status: createTask.status === 'Critical' ? createTask.status : 'Normal',\r\n      task: createTask.task ? createTask.task : 'New Task',\r\n      assign: createTask.assign ? createTask.assign : 'You',\r\n      links: createTask.links ? createTask.links : '',\r\n      result: createTask.result ? createTask.result : 'In work',\r\n      cheked: false\r\n    }\r\n    dispatch(setCreateNewTask(newTask))\r\n\r\n    const localArr = localStorage.getItem('todos');\r\n    if (localArr) {\r\n      const arr = JSON.parse(localArr)\r\n      localStorage.setItem('todos', JSON.stringify([newTask, ...arr]))\r\n    } else {\r\n      localStorage.setItem('todos', JSON.stringify([newTask]))\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <CircularProgress\r\n      color=\"success\"\r\n      determinate={false}\r\n      size=\"md\"\r\n      value={25}\r\n      variant=\"plain\"\r\n    />\r\n  }\r\n\r\n  if (isError) {\r\n    return <Alert severity=\"error\" >\r\n      <AlertTitle>\r\n        Something wrong....\r\n      </AlertTitle>\r\n    </Alert>\r\n  }\r\n\r\n  return (\r\n    <CardContent>\r\n      <div className=\"parent\">\r\n        <div className=\"parent__header\">\r\n          {\r\n            columns.map((el) => <HeaderName\r\n              key={el.field}\r\n              {...el}\r\n            />)\r\n          }\r\n        </div>\r\n        <div className=\"parent__body\">\r\n          <div className=\"parent__body-task\">\r\n            <input type=\"text\" name='createTask' placeholder='type to create a task' value={createTaskValue} onChange={handleChangeTaskName} />\r\n            <button className='parent__body-button' onClick={createNewTask}>Create</button>\r\n          </div>\r\n          <div className=\"body__task\">\r\n            {\r\n              todos.map((el) => <BodyTask key={el.id} {...el} />)\r\n            }\r\n          </div>\r\n          <div className=\"completed__tasks completed\">\r\n            {\r\n              complatedTasks.map((el) => <CompletedTask key={el.id} {...el} />)\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n\r\nexport default TodoDataGrid;","import React, { useEffect } from 'react';\r\nimport { Card } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport { useDispatch } from 'react-redux'\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport TodoDataGrid from './TodoDataGrid';\r\nimport { setCompletedTodo, setTodo } from '../redux/Slice/todo';\r\n\r\nconst Field = {\r\n  DATE: 'date',\r\n  STATUS: 'status',\r\n  TASK: 'task',\r\n  ASSING: 'assign',\r\n  LINKS: 'links',\r\n  RESULT: 'result',\r\n}\r\n\r\nconst columns = [\r\n  { field: Field.DATE, headerName: 'Date', isInput: true },\r\n  {\r\n    field: Field.STATUS,\r\n    headerName: 'Status',\r\n    editable: true,\r\n    value: ['Normal', 'Critical']\r\n  },\r\n  {\r\n    field: Field.TASK,\r\n    headerName: 'Task',\r\n    isInput: true\r\n  },\r\n  {\r\n    field: Field.ASSING,\r\n    headerName: 'Assign',\r\n    editable: true,\r\n    value: ['NOT', 'Bro', 'You']\r\n  },\r\n  {\r\n    field: Field.LINKS,\r\n    headerName: 'Links',\r\n    isInput: true\r\n  },\r\n  {\r\n    field: Field.RESULT,\r\n    isInput: true,\r\n    headerName: 'Result',\r\n\r\n  },\r\n];\r\n\r\n// const rows = [\r\n//   {\r\n//     id: 1,\r\n//     date: \"20.10.2022\",\r\n//     check: false,\r\n//     status: \"Normal\",\r\n//     task: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\",\r\n//     assign: \"Bro\",\r\n//     links: \"https://google.com\",\r\n//     result: \"In work\"\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     date: \"18.10.2022\",\r\n//     check: false,\r\n//     status: \"Critical\",\r\n//     task: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\",\r\n//     assign: 'SomeBody',\r\n//     links: \"https://google.com\",\r\n//     result: \"In work\"\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     date: \"25.10.2022\",\r\n//     check: false,\r\n//     status: \"Normal\",\r\n//     task: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\",\r\n//     assign: 'You',\r\n//     links: \"https://google.com\",\r\n//     result: \"Performed\"\r\n//   },\r\n//   {\r\n//     id: 4,\r\n//     date: \"20.10.2022\",\r\n//     check: false,\r\n//     status: \"Normal\",\r\n//     task: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, assign: 'You', Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, assign: 'You',\",\r\n//   },\r\n//   {\r\n//     id: 5,\r\n//     date: \"20.10.2022\",\r\n//     check: false,\r\n//     status: \"Normal\",\r\n//     task: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\",\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     date: \"20.10.2022\",\r\n//     check: false,\r\n//     status: \"Normal\",\r\n//     task: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\",\r\n//   },\r\n//   {\r\n//     id: 7,\r\n//     date: \"20.10.2022\",\r\n//     check: false,\r\n//     status: \"Normal\",\r\n//     task: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\",\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     date: \"20.10.2022\",\r\n//     check: false,\r\n//     status: \"Normal\",\r\n//     task: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\",\r\n//   },\r\n//   {\r\n//     id: 9,\r\n//     date: \"20.10.2022\",\r\n//     check: false,\r\n//     status: \"Normal\",\r\n//     task: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\",\r\n//   },\r\n//   {\r\n//     id: 10,\r\n//     date: \"20.10.2022\",\r\n//     check: false,\r\n//     status: \"Normal\",\r\n//     task: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\",\r\n//   },\r\n// ];\r\n\r\n// const completed = [\r\n//   {\r\n//     id: 1,\r\n//     date: \"20.10.2022\",\r\n//     check: false,\r\n//     status: \"Normal\",\r\n//     task: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\",\r\n//     assign: \"Bro\",\r\n//     links: \"https://google.com\",\r\n//     result: \"In work\"\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     date: \"18.10.2022\",\r\n//     check: false,\r\n//     status: \"Critical\",\r\n//     task: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\",\r\n//     assign: 'SomeBody',\r\n//     links: \"https://google.com\",\r\n//     result: \"In work\"\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     date: \"25.10.2022\",\r\n//     check: false,\r\n//     status: \"Normal\",\r\n//     task: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\",\r\n//     assign: 'You',\r\n//     links: \"https://google.com\",\r\n//     result: \"Performed\"\r\n//   },\r\n// ];\r\n\r\nexport const Todo = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const tasks = localStorage.getItem('todos');\r\n    if (tasks) {\r\n      dispatch(setTodo(JSON.parse(tasks)))\r\n    }\r\n    const completedTasks = localStorage.getItem('completed');\r\n    if (completedTasks) {\r\n      dispatch(setCompletedTodo(JSON.parse(completedTasks)))\r\n    }\r\n  }, [dispatch])\r\n\r\n  const theme = createTheme();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xl\">\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Card sx={{ width: '100%' }}>\r\n            <TodoDataGrid error={false} columns={columns} />\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import { Todo } from \"../components/Todo\";\n\n\nconst App = () => {\n  return (\n    <>\n      <Todo />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\nimport App from './app/App';\nimport './styles/index.scss';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}