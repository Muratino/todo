{"version":3,"sources":["redux/Slice/todo.js","redux/store.js","utils/strDate.js","utils/statusStyle.js","components/BodyTask.js","components/HeaderName.js","components/CompletedTask.js","components/TodoDataGrid.js","components/Todo.js","app/App.js","index.js"],"names":["todoSlice","createSlice","name","initialState","todos","filterTodos","isFiltering","isLoading","isError","createTask","id","date","status","task","assign","links","result","complatedTasks","reducers","setTodo","state","action","payload","setCompletedTodo","setDeleteTask","newArr","filter","el","Number","localStorage","setItem","JSON","stringify","setChangeTaskStatus","changedStatus","find","criticalStatusArr","String","majorStatusArr","minorStatusArr","console","log","setChangeTaskDate","changedDate","setChangeTaskAssign","changedAssign","setChangeTaskLinks","changedLinks","setChangeTaskName","changedTask","setDeleteCompletedTask","setTodoLoading","setTodoError","setComplatedTask","completTask","setReturnTask","setCreateDate","setCreateAssing","setCreateStatus","setCreateNewTask","setCreateLinks","setCreateResult","setCreateTaskName","setFileter","value","type","filteredDateArr","filteredStatusArr","filteredAssignArr","deletFilters","key","actions","store","configureStore","reducer","todo","strDate","str","isToDate","split","reverse","join","statusStyle","background","color","BodyTask","dispatch","useDispatch","React","useState","valueCheckBox","setValueCheckBox","selectValue","setSelectValue","valueDate","setValueDate","valueAssign","setValueAssign","valueInputLinks","setValueInputLinks","valueInputTask","setValueInputTask","style","className","checked","onChange","prev","event","target","statusTasks","map","index","padding","boxSizing","setTimeout","assignMoclArr","IconButton","onClick","size","sx","HeaderName","field","headerName","editable","isInput","valueInputDate","setValueInputDate","fontWeight","newStr","Typography","CompletedTask","e","htmlFor","border","TodoDataGrid","columns","useSelector","createTaskValue","setCreateTaskValue","useEffect","CardContent","placeholder","newTask","Math","floor","random","Date","toLocaleDateString","cheked","Todo","tasks","getItem","parse","completedTasks","theme","createTheme","ThemeProvider","Container","component","maxWidth","Box","marginTop","display","flexDirection","alignItems","Card","width","error","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b60fa3e7.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  filterTodos: [],\r\n  isFiltering: true,\r\n  isLoading: false,\r\n  isError: false,\r\n  createTask: {\r\n    id: null,\r\n    date: '',\r\n    status: '',\r\n    task: '',\r\n    assign: '',\r\n    links: '',\r\n    result: ''\r\n  },\r\n  complatedTasks: []\r\n}\r\n\r\nexport const todoSlice = createSlice({\r\n  name: 'todo',\r\n  initialState,\r\n  reducers: {\r\n    setTodo(state, action) {\r\n      state.todos = [...action.payload]\r\n    },\r\n    setCompletedTodo(state, action) {\r\n      state.complatedTasks = [...action.payload]\r\n    },\r\n    setDeleteTask(state, action) {\r\n      const newArr = state.todos.filter(el => Number(el.id) !== Number(action.payload))\r\n      state.todos = newArr\r\n      localStorage.setItem('todos', JSON.stringify(newArr))\r\n    },\r\n    setChangeTaskStatus(state, action) {\r\n      const changedStatus = state.todos.find(el => Number(el.id) === Number(action.payload.id))\r\n\r\n      const criticalStatusArr = state.todos.filter(el => String(el.status) === 'Critical' && Number(el.id) !== Number(action.payload.id))\r\n      const majorStatusArr = state.todos.filter(el => String(el.status) === 'Major' && Number(el.id) !== Number(action.payload.id))\r\n      const minorStatusArr = state.todos.filter(el => String(el.status) === 'Minor' && Number(el.id) !== Number(action.payload.id))\r\n\r\n      changedStatus.status = action.payload.status;\r\n      switch (changedStatus.status) {\r\n        case 'Critical':\r\n          state.todos = [changedStatus, ...criticalStatusArr, ...majorStatusArr, ...minorStatusArr]\r\n          localStorage.setItem('todos', JSON.stringify(state.todos))\r\n          break;\r\n        case 'Major':\r\n          state.todos = [...criticalStatusArr, changedStatus, ...majorStatusArr, ...minorStatusArr]\r\n          localStorage.setItem('todos', JSON.stringify(state.todos))\r\n          break;\r\n        case 'Minor':\r\n          state.todos = [...criticalStatusArr, ...majorStatusArr, changedStatus, ...minorStatusArr]\r\n          localStorage.setItem('todos', JSON.stringify(state.todos))\r\n          break;\r\n        default:\r\n          console.log('Error with switchCase');\r\n          break;\r\n      }\r\n    },\r\n    setChangeTaskDate(state, action) {\r\n      const changedDate = state.todos.find(el => Number(el.id) === Number(action.payload.id))\r\n\r\n      const criticalStatusArr = state.todos.filter(el => String(el.status) === 'Critical' && Number(el.id) !== Number(action.payload.id))\r\n      const majorStatusArr = state.todos.filter(el => String(el.status) === 'Major' && Number(el.id) !== Number(action.payload.id))\r\n      const minorStatusArr = state.todos.filter(el => String(el.status) === 'Minor' && Number(el.id) !== Number(action.payload.id))\r\n\r\n      changedDate.date = action.payload.date;\r\n      switch (changedDate.status) {\r\n        case 'Critical':\r\n          state.todos = [changedDate, ...criticalStatusArr, ...majorStatusArr, ...minorStatusArr]\r\n          break;\r\n        case 'Major':\r\n          state.todos = [...criticalStatusArr, changedDate, ...majorStatusArr, ...minorStatusArr]\r\n          break;\r\n        case 'Minor':\r\n          state.todos = [...criticalStatusArr, ...majorStatusArr, changedDate, ...minorStatusArr]\r\n          break;\r\n      }\r\n      localStorage.setItem('todos', JSON.stringify(state.todos))\r\n    },\r\n    setChangeTaskAssign(state, action) {\r\n      const changedAssign = state.todos.find(el => Number(el.id) === Number(action.payload.id))\r\n\r\n      const criticalStatusArr = state.todos.filter(el => String(el.status) === 'Critical' && Number(el.id) !== Number(action.payload.id))\r\n      const majorStatusArr = state.todos.filter(el => String(el.status) === 'Major' && Number(el.id) !== Number(action.payload.id))\r\n      const minorStatusArr = state.todos.filter(el => String(el.status) === 'Minor' && Number(el.id) !== Number(action.payload.id))\r\n\r\n      changedAssign.assign = action.payload.assign;\r\n      switch (changedAssign.status) {\r\n        case 'Critical':\r\n          state.todos = [changedAssign, ...criticalStatusArr, ...majorStatusArr, ...minorStatusArr]\r\n          break;\r\n        case 'Major':\r\n          state.todos = [...criticalStatusArr, changedAssign, ...majorStatusArr, ...minorStatusArr]\r\n          break;\r\n        case 'Minor':\r\n          state.todos = [...criticalStatusArr, ...majorStatusArr, changedAssign, ...minorStatusArr]\r\n          break;\r\n      }\r\n      localStorage.setItem('todos', JSON.stringify(state.todos))\r\n    },\r\n    setChangeTaskLinks(state, action) {\r\n      const changedLinks = state.todos.find(el => Number(el.id) === Number(action.payload.id))\r\n\r\n      const criticalStatusArr = state.todos.filter(el => String(el.status) === 'Critical' && Number(el.id) !== Number(action.payload.id))\r\n      const majorStatusArr = state.todos.filter(el => String(el.status) === 'Major' && Number(el.id) !== Number(action.payload.id))\r\n      const minorStatusArr = state.todos.filter(el => String(el.status) === 'Minor' && Number(el.id) !== Number(action.payload.id))\r\n\r\n      changedLinks.links = action.payload.links;\r\n      switch (changedLinks.status) {\r\n        case 'Critical':\r\n          state.todos = [changedLinks, ...criticalStatusArr, ...majorStatusArr, ...minorStatusArr]\r\n          break;\r\n        case 'Major':\r\n          state.todos = [...criticalStatusArr, changedLinks, ...majorStatusArr, ...minorStatusArr]\r\n          break;\r\n        case 'Minor':\r\n          state.todos = [...criticalStatusArr, ...majorStatusArr, changedLinks, ...minorStatusArr]\r\n          break;\r\n      }\r\n      localStorage.setItem('todos', JSON.stringify(state.todos))\r\n    },\r\n    setChangeTaskName(state, action) {\r\n      const changedTask = state.todos.find(el => Number(el.id) === Number(action.payload.id))\r\n\r\n      const criticalStatusArr = state.todos.filter(el => String(el.status) === 'Critical' && Number(el.id) !== Number(action.payload.id))\r\n      const majorStatusArr = state.todos.filter(el => String(el.status) === 'Major' && Number(el.id) !== Number(action.payload.id))\r\n      const minorStatusArr = state.todos.filter(el => String(el.status) === 'Minor' && Number(el.id) !== Number(action.payload.id))\r\n\r\n      changedTask.task = action.payload.task;\r\n      switch (changedTask.status) {\r\n        case 'Critical':\r\n          state.todos = [changedTask, ...criticalStatusArr, ...majorStatusArr, ...minorStatusArr]\r\n          break;\r\n        case 'Major':\r\n          state.todos = [...criticalStatusArr, changedTask, ...majorStatusArr, ...minorStatusArr]\r\n          break;\r\n        case 'Minor':\r\n          state.todos = [...criticalStatusArr, ...majorStatusArr, changedTask, ...minorStatusArr]\r\n          break;\r\n      }\r\n      localStorage.setItem('todos', JSON.stringify(state.todos))\r\n    },\r\n    setDeleteCompletedTask(state, action) {\r\n      const newArr = state.complatedTasks = state.complatedTasks.filter(el => Number(el.id) !== Number(action.payload))\r\n      state.complatedTasks = newArr\r\n      localStorage.setItem('completed', JSON.stringify(newArr))\r\n    },\r\n    setTodoLoading(state) {\r\n      state.isLoading = true\r\n    },\r\n    setTodoError(state, action) {\r\n      state.isError = action.payload\r\n    },\r\n    setComplatedTask(state, action) {\r\n      const completTask = state.todos.filter(el => Number(el.id) === Number(action.payload))\r\n      const newArr = state.todos.filter(el => Number(el.id) !== Number(action.payload))\r\n\r\n      const criticalStatusArr = state.complatedTasks.filter(el => String(el.status) === 'Critical' && Number(el.id) !== Number(action.payload))\r\n      const majorStatusArr = state.complatedTasks.filter(el => String(el.status) === 'Major' && Number(el.id) !== Number(action.payload))\r\n      const minorStatusArr = state.complatedTasks.filter(el => String(el.status) === 'Minor' && Number(el.id) !== Number(action.payload))\r\n      switch (completTask[0].status) {\r\n        case 'Critical':\r\n          state.complatedTasks = [...completTask, ...criticalStatusArr, ...majorStatusArr, ...minorStatusArr]\r\n          break;\r\n        case 'Major':\r\n          state.complatedTasks = [...criticalStatusArr, ...completTask, ...majorStatusArr, ...minorStatusArr]\r\n          break;\r\n        case 'Minor':\r\n          state.complatedTasks = [...criticalStatusArr, ...majorStatusArr, ...completTask, ...minorStatusArr]\r\n          break;\r\n      }\r\n\r\n      state.todos = newArr\r\n      localStorage.setItem('todos', JSON.stringify(newArr))\r\n      localStorage.setItem('completed', JSON.stringify(state.complatedTasks))\r\n\r\n    },\r\n    setReturnTask(state, action) {\r\n      const task = state.complatedTasks.filter(el => Number(el.id) === Number(action.payload))\r\n      const newArr = state.complatedTasks = state.complatedTasks.filter(el => Number(el.id) !== Number(action.payload))\r\n\r\n      const criticalStatusArr = state.todos.filter(el => String(el.status) === 'Critical' && Number(el.id) !== Number(action.payload))\r\n      const majorStatusArr = state.todos.filter(el => String(el.status) === 'Major' && Number(el.id) !== Number(action.payload))\r\n      const minorStatusArr = state.todos.filter(el => String(el.status) === 'Minor' && Number(el.id) !== Number(action.payload))\r\n\r\n      switch (task[0].status) {\r\n        case 'Critical':\r\n          state.todos = [...task, ...criticalStatusArr, ...majorStatusArr, ...minorStatusArr]\r\n          break;\r\n        case 'Major':\r\n          state.todos = [...criticalStatusArr, ...task, ...majorStatusArr, ...minorStatusArr]\r\n          break;\r\n        case 'Minor':\r\n          state.todos = [...criticalStatusArr, ...majorStatusArr, ...task, ...minorStatusArr]\r\n          break;\r\n      }\r\n\r\n      state.complatedTasks = newArr\r\n      localStorage.setItem('completed', JSON.stringify(newArr))\r\n      localStorage.setItem('todos', JSON.stringify(state.todos))\r\n    },\r\n    setCreateDate(state, action) {\r\n      state.createTask = { ...state.createTask, date: action.payload }\r\n    },\r\n    setCreateAssing(state, action) {\r\n      state.createTask = { ...state.createTask, assign: action.payload }\r\n    },\r\n    setCreateStatus(state, action) {\r\n      state.createTask = { ...state.createTask, status: action.payload }\r\n    },\r\n    setCreateNewTask(state, action) {\r\n      // action.payload.status === 'Critical' ? state.todos.unshift(action.payload) : state.todos.push(action.payload)\r\n      // action.payload.status === 'Critical' ? state.filterTodos.unshift(action.payload) : state.filterTodos.push(action.payload)\r\n\r\n      const criticalStatusArr = state.todos.filter(el => String(el.status) === 'Critical' && Number(el.id) !== Number(action.payload.id))\r\n      const majorStatusArr = state.todos.filter(el => String(el.status) === 'Major' && Number(el.id) !== Number(action.payload.id))\r\n      const minorStatusArr = state.todos.filter(el => String(el.status) === 'Minor' && Number(el.id) !== Number(action.payload.id))\r\n\r\n      switch (action.payload.status) {\r\n        case 'Critical':\r\n          state.todos = [action.payload, ...criticalStatusArr, ...majorStatusArr, ...minorStatusArr]\r\n          state.filterTodos = [action.payload, ...criticalStatusArr]\r\n          localStorage.setItem('todos', JSON.stringify(state.todos))\r\n          break;\r\n        case 'Major':\r\n          state.todos = [...criticalStatusArr, action.payload, ...majorStatusArr, ...minorStatusArr]\r\n          state.filterTodos = [action.payload, ...majorStatusArr]\r\n          localStorage.setItem('todos', JSON.stringify(state.todos))\r\n          break;\r\n        case 'Minor':\r\n          state.todos = [...criticalStatusArr, ...majorStatusArr, action.payload, ...minorStatusArr]\r\n          state.filterTodos = [action.payload, ...minorStatusArr]\r\n          localStorage.setItem('todos', JSON.stringify(state.todos))\r\n          break;\r\n      }\r\n    },\r\n    setCreateLinks(state, action) {\r\n      state.createTask = { ...state.createTask, links: action.payload }\r\n    },\r\n    setCreateResult(state, action) {\r\n      state.createTask = { ...state.createTask, result: action.payload }\r\n    },\r\n    setCreateTaskName(state, action) {\r\n      state.createTask = { ...state.createTask, task: action.payload }\r\n    },\r\n    setFileter(state, action) {\r\n      if (!action.payload.value) {\r\n        state.isFiltering = false\r\n        state.filterTodos = []\r\n        return\r\n      }\r\n\r\n      state.isFiltering = true;\r\n      switch (action.payload.type) {\r\n        case 'date':\r\n          state.filterTodos = [...state.todos]\r\n          // const dateArr = state.todos.filter(el => el.date == action.payload.value)\r\n          const filteredDateArr = state.filterTodos.filter(el => el.date == action.payload.value)\r\n          state.filterTodos = [...filteredDateArr]\r\n          break;\r\n        case 'status':\r\n          state.filterTodos = [...state.todos]\r\n          // const statusArr = state.todos.filter(el => el.status == action.payload.value)\r\n          const filteredStatusArr = state.filterTodos.filter(el => el.status == action.payload.value)\r\n          state.filterTodos = [...filteredStatusArr]\r\n          break;\r\n        case 'assign':\r\n          state.filterTodos = [...state.todos]\r\n          // const statusArr = state.todos.filter(el => el.status == action.payload.value)\r\n          const filteredAssignArr = state.filterTodos.filter(el => el.assign == action.payload.value)\r\n          state.filterTodos = [...filteredAssignArr]\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    deletFilters(state) {\r\n      state.isFiltering = false\r\n      state.filterTodos = []\r\n      for (let key in state.createTask) {\r\n        key == 'id' ? state.createTask[key] = null : state.createTask[key] = ''\r\n      }\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  setChangeTaskStatus,\r\n  setChangeTaskName,\r\n  deletFilters,\r\n  setFileter,\r\n  setChangeTaskLinks,\r\n  setChangeTaskDate,\r\n  setChangeTaskAssign,\r\n  setTodo,\r\n  setCompletedTodo,\r\n  setDeleteCompletedTask,\r\n  setDeleteTask,\r\n  setTodoError,\r\n  setTodoLoading,\r\n  setCreateDate,\r\n  setCreateAssing,\r\n  setCreateStatus,\r\n  setCreateNewTask,\r\n  setCreateTaskName,\r\n  setCreateResult,\r\n  setCreateLinks,\r\n  setReturnTask,\r\n  setComplatedTask\r\n} = todoSlice.actions\r\n\r\nexport default todoSlice.reducer","import { configureStore } from '@reduxjs/toolkit'\r\nimport todo from './Slice/todo';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    todo\r\n  },\r\n})","const strDate = (str, isToDate) => {\r\n  if (isToDate) {\r\n    return str.split(\".\").reverse().join(\"-\")\r\n  } else {\r\n    return str.split(\"-\").reverse().join(\".\")\r\n  }\r\n\r\n};\r\n\r\nexport default strDate;","export const statusStyle = (status) => {\r\n  if (status === 'Minor') {\r\n    return { background: '#b7db95' }\r\n  } else if (status === 'Major') {\r\n    return { background: 'rgb(255 249 73 / 95%)' }\r\n  } else {\r\n    return { background: '#F73F3F', color: '#fff' }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  setComplatedTask,\r\n  setDeleteTask,\r\n  setChangeTaskStatus,\r\n  setChangeTaskDate,\r\n  setChangeTaskAssign,\r\n  setChangeTaskLinks,\r\n  setChangeTaskName,\r\n} from '../redux/Slice/todo';\r\nimport { assignMoclArr, statusTasks } from './Todo';\r\nimport strDate from '../utils/strDate';\r\nimport { statusStyle } from '../utils/statusStyle';\r\n\r\nconst BodyTask = ({ id, date, task, status, links, result, assign }) => {\r\n  const dispatch = useDispatch();\r\n  const [valueCheckBox, setValueCheckBox] = React.useState(false);\r\n  const [selectValue, setSelectValue] = React.useState(false);\r\n  const [valueDate, setValueDate] = React.useState(date);\r\n  const [valueAssign, setValueAssign] = React.useState(assign);\r\n  const [valueInputLinks, setValueInputLinks] = React.useState(links);\r\n  const [valueInputTask, setValueInputTask] = React.useState(task);\r\n\r\n  const handleChangeLabel = () => {\r\n    setValueCheckBox(prev => !prev)\r\n    dispatch(setComplatedTask(id))\r\n  };\r\n\r\n  const handleDeleteTask = () => {\r\n    dispatch(setDeleteTask(id))\r\n  };\r\n\r\n  const handleChangeStatus = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSelectValue(value);\r\n    dispatch(setChangeTaskStatus({ id, status: value }));\r\n  };\r\n\r\n  const handleChangeDate = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setValueDate(value);\r\n    dispatch(setChangeTaskDate({ id, date: strDate(value) }));\r\n  };\r\n\r\n  const handleChangeAssign = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setValueAssign(value);\r\n    dispatch(setChangeTaskAssign({ id, assign: value }));\r\n  };\r\n\r\n  const handleChangeLinks = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setValueInputLinks(value);\r\n    setTimeout(() => {\r\n      dispatch(setChangeTaskLinks({ id, links: value }))\r\n    }, 400);\r\n  };\r\n\r\n  const handleChangeTaskName = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setValueInputTask(value);\r\n    setTimeout(() => {\r\n      dispatch(setChangeTaskName({ id, task: value }))\r\n    }, 400);\r\n  };\r\n\r\n  const style = statusStyle(status);\r\n\r\n  return (\r\n    <div className='task'>\r\n      <div\r\n        className=\"task__input d-flex bordered\">\r\n        <input type=\"checkbox\" id={id} checked={valueCheckBox} onChange={handleChangeLabel} />\r\n        <input type=\"date\" name={`date${id}`} value={strDate(valueDate, true)} onChange={handleChangeDate} />\r\n      </div>\r\n      <div className=\"task__status d-flex bordered\">\r\n        <div style={style} className=\"task__status-oval bordered\">\r\n          <select style={style} name={`status${id}`} id={`status${id}`} value={selectValue} onChange={handleChangeStatus}>\r\n            <option value=\"\">{status}</option>\r\n            {statusTasks.map((el, index) => el === status ? null : <option key={index} value={el} >{el}</option>)}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div style={{ padding: '8px', boxSizing: 'border-box' }} className=\"task__name bordered\">\r\n        <input type=\"text\" name={`task${id}`} value={valueInputTask} onChange={handleChangeTaskName} />\r\n      </div>\r\n      <div className=\"task__name d-flex bordered\">\r\n        <span>Assign:</span>\r\n        <select name={`assign${id}`} id={`assign${id}`} value={valueAssign} onChange={handleChangeAssign}>\r\n          <option value=\"\">{assign}</option>\r\n          {assignMoclArr.map((el, index) => el === assign ? null : <option key={index} value={el} >{el}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"task__name d-flex bordered\">\r\n        <input type=\"text\" name={`links${id}`} value={valueInputLinks} onChange={handleChangeLinks} />\r\n      </div>\r\n      <div className=\"task__name d-flex bordered\">\r\n        <span>{result}</span>\r\n      </div>\r\n      <div className=\"task__name d-flex bordered\">\r\n        <IconButton\r\n          onClick={handleDeleteTask}\r\n          color=\"error\"\r\n          aria-label=\"delete\"\r\n          size=\"large\"\r\n          sx={{ padding: 0 }}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BodyTask;\r\n","import React from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  setCreateDate,\r\n  setCreateAssing,\r\n  setCreateStatus,\r\n  setFileter\r\n} from '../redux/Slice/todo';\r\nimport strDate from '../utils/strDate';\r\n\r\nconst HeaderName = ({ field, headerName, editable, value, isInput }) => {\r\n  const dispatch = useDispatch();\r\n  const [selectValue, setSelectValue] = React.useState('');\r\n  const [valueInputDate, setValueInputDate] = React.useState('');\r\n\r\n  const handleChangeDate = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    const newStr = strDate(value);\r\n    setValueInputDate(value);\r\n    dispatch(setCreateDate(newStr))\r\n    dispatch(setFileter({ type: 'date', value: newStr }))\r\n  };\r\n\r\n  const handleChangeStatus = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSelectValue(value);\r\n    field === 'status' ? dispatch(setCreateStatus(value)) : dispatch(setCreateAssing(value))\r\n    dispatch(setFileter({ type: field === 'status' ? 'status' : 'assign', value }))\r\n  };\r\n\r\n  if (editable) {\r\n    return (\r\n      <select name={field} id={field} value={selectValue} onChange={handleChangeStatus} style={field === 'status' ? { fontWeight: '400' } : {}}>\r\n        {\r\n          field === 'status' ? <option value=\"\">Priority</option> : <option value=\"\">Assigns</option>\r\n        }\r\n        {value.map((el, index) => <option key={index} value={el} >{el}</option>)}\r\n      </select>\r\n    )\r\n  }\r\n  if (isInput && field === 'date') {\r\n    return (\r\n      <input value={valueInputDate} onChange={handleChangeDate} type=\"date\" name='date' />\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <Typography>{headerName}</Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderName;","import React from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setReturnTask, setDeleteCompletedTask } from '../redux/Slice/todo';\r\nimport { statusStyle } from '../utils/statusStyle';\r\n\r\nconst CompletedTask = ({ id, date, task, status, links, result, assign }) => {\r\n  const dispatch = useDispatch();\r\n  const [selectValue, setSelectValue] = React.useState(true);\r\n\r\n  const handleChangeLabel = (e) => {\r\n    setSelectValue(e.target.checked)\r\n    dispatch(setReturnTask(id))\r\n  };\r\n\r\n  const handleDeleteTask = () => {\r\n    dispatch(setDeleteCompletedTask(id))\r\n  };\r\n\r\n  const style = statusStyle(status);\r\n\r\n  return (\r\n    <div className='task'>\r\n      <div\r\n        className=\"task__input d-flex bordered\">\r\n        <input type=\"checkbox\" id={id} checked={selectValue} onChange={handleChangeLabel} />\r\n        <label htmlFor={id}>{date}</label>\r\n      </div>\r\n      <div className=\"task__status d-flex bordered\" >\r\n        <div style={style} className=\"task__status-oval\">\r\n          <span>{status}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"task__name bordered\" style={{ padding: '8px', boxSizing: 'border-box' }}>\r\n        <span>{task}</span>\r\n      </div>\r\n      <div className=\"task__name d-flex bordered\" >\r\n        <span>Assign: {assign}</span>\r\n      </div>\r\n      <div className=\"task__name d-flex bordered\" style={{ border: '1px solid rgb(209, 209, 209)' }}>\r\n        <span>{links}</span>\r\n      </div>\r\n      <div className=\"task__name d-flex bordered \" >\r\n        <span>{result}</span>\r\n      </div>\r\n      <div className=\"task__name d-flex bordered\">\r\n        <IconButton\r\n          onClick={handleDeleteTask}\r\n          color=\"error\"\r\n          aria-label=\"delete\"\r\n          size=\"large\"\r\n          sx={{ padding: 0 }}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompletedTask;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CardContent } from '@mui/material';\r\nimport BodyTask from './BodyTask';\r\nimport HeaderName from './HeaderName';\r\nimport CompletedTask from './CompletedTask';\r\nimport {\r\n  deletFilters,\r\n  setCreateNewTask,\r\n  setCreateTaskName,\r\n} from '../redux/Slice/todo';\r\n\r\nconst TodoDataGrid = ({ columns }) => {\r\n  const dispatch = useDispatch();\r\n  const { createTask, todos, complatedTasks, isFiltering, filterTodos } = useSelector(state => state.todo)\r\n  const [createTaskValue, setCreateTaskValue] = React.useState('');\r\n\r\n  const handleChangeTaskName = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setCreateTaskValue(value);\r\n    setTimeout(() => {\r\n      dispatch(setCreateTaskName(value))\r\n    }, 400);\r\n  };\r\n\r\n  const createNewTask = () => {\r\n    let newTask = {\r\n      id: createTask.id ? createTask.id : Math.floor(Math.random() * (1000 - 10)) + 10,\r\n      date: createTask.date ? createTask.date : new Date().toLocaleDateString(),\r\n      status: createTask.status ? createTask.status : 'Minor',\r\n      task: createTask.task ? createTask.task : 'New Task ...',\r\n      assign: createTask.assign ? createTask.assign : 'Me',\r\n      links: createTask.links ? createTask.links : '',\r\n      result: createTask.result ? createTask.result : 'In work',\r\n      cheked: false\r\n    }\r\n    dispatch(setCreateNewTask(newTask))\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(deletFilters())\r\n  }, [])\r\n\r\n  return (\r\n    <CardContent>\r\n      <div className=\"parent\">\r\n        <div className=\"parent__header\">\r\n          {\r\n            columns.map((el) => <HeaderName\r\n              key={el.field}\r\n              {...el}\r\n            />)\r\n          }\r\n        </div>\r\n        <div className=\"parent__body\">\r\n          <div className=\"parent__body-task\">\r\n            <input type=\"text\" name='createTask' placeholder='type to create a task' value={createTaskValue} onChange={handleChangeTaskName} />\r\n            <button className='parent__body-button' onClick={createNewTask}>Create</button>\r\n          </div>\r\n          <div className=\"body__task\">\r\n            {\r\n              isFiltering\r\n                ? filterTodos.map((el) => <BodyTask key={el.id} {...el} />)\r\n                : todos.map((el) => <BodyTask key={el.id} {...el} />)\r\n            }\r\n          </div>\r\n          <div className=\"completed__tasks completed\">\r\n            {\r\n              complatedTasks.map((el) => <CompletedTask key={el.id} {...el} />)\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n\r\nexport default TodoDataGrid;","import React, { useEffect } from 'react';\r\nimport { Card } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport { useDispatch } from 'react-redux'\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport TodoDataGrid from './TodoDataGrid';\r\nimport { setCompletedTodo, setTodo } from '../redux/Slice/todo';\r\n\r\nconst Field = {\r\n  DATE: 'date',\r\n  STATUS: 'status',\r\n  TASK: 'task',\r\n  ASSING: 'assign',\r\n  LINKS: 'links',\r\n  RESULT: 'result',\r\n}\r\n\r\nexport const statusTasks = ['Critical', 'Major', 'Minor']\r\nexport const assignMoclArr = ['Some', 'Bro', 'Me']\r\n\r\nconst columns = [\r\n  { field: Field.DATE, headerName: 'Date', isInput: true },\r\n  {\r\n    field: Field.STATUS,\r\n    headerName: 'Status',\r\n    editable: true,\r\n    value: statusTasks\r\n  },\r\n  {\r\n    field: Field.TASK,\r\n    headerName: 'Task',\r\n    isInput: true\r\n  },\r\n  {\r\n    field: Field.ASSING,\r\n    headerName: 'Assign',\r\n    editable: true,\r\n    value: assignMoclArr\r\n  },\r\n  {\r\n    field: Field.LINKS,\r\n    headerName: 'Links',\r\n    isInput: true\r\n  },\r\n  {\r\n    field: Field.RESULT,\r\n    isInput: true,\r\n    headerName: 'Result',\r\n\r\n  },\r\n];\r\nexport const Todo = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const tasks = localStorage.getItem('todos');\r\n    if (tasks) {\r\n      dispatch(setTodo(JSON.parse(tasks)))\r\n    }\r\n    const completedTasks = localStorage.getItem('completed');\r\n    if (completedTasks) {\r\n      dispatch(setCompletedTodo(JSON.parse(completedTasks)))\r\n    }\r\n  }, [dispatch])\r\n\r\n  const theme = createTheme();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xl\">\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Card sx={{ width: '100%' }}>\r\n            <TodoDataGrid error={false} columns={columns} />\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import { Todo } from \"../components/Todo\";\n\n\nconst App = () => {\n  return (\n    <>\n      <Todo />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\nimport App from './app/App';\nimport './styles/index.scss';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}